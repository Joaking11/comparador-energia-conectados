generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/comparativas_energia_mvp/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model accounts {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model clientes {
  id             String         @id
  razonSocial    String
  cif            String?
  direccion      String?
  localidad      String?
  provincia      String?
  codigoPostal   String?
  nombreFirmante String?
  nifFirmante    String?
  telefono       String?
  email          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  comparativas   comparativas[]
}

model comercializadoras {
  id         String       @id
  nombre     String       @unique
  activa     Boolean      @default(true)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime
  color      String?      @default("#3B82F6")
  logoUrl    String?
  comisiones comisiones[]
  tarifas    tarifas[]
}

model comisiones {
  id                    String            @id
  comercializadoraId    String
  nombreOferta          String
  energiaVerde          Boolean           @default(false)
  tarifa                String
  zona                  String?
  tipoOferta            String
  rango                 String
  rangoDesde            Float
  rangoHasta            Float?
  tieneFee              Boolean           @default(false)
  porcentajeFeeEnergia  Float?
  porcentajeFeePotencia Float?
  comision              Float
  activa                Boolean           @default(true)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime
  comercializadoras     comercializadoras @relation(fields: [comercializadoraId], references: [id], onDelete: Cascade)
}

model comparativa_ofertas {
  id               String       @id
  comparativaId    String
  tarifaId         String
  importeCalculado Float
  ahorroAnual      Float
  comisionGanada   Float
  createdAt        DateTime     @default(now())
  comparativas     comparativas @relation(fields: [comparativaId], references: [id], onDelete: Cascade)
  tarifas          tarifas      @relation(fields: [tarifaId], references: [id], onDelete: Cascade)

  @@unique([comparativaId, tarifaId])
}

model comparativas {
  id                           String                @id
  clienteId                    String
  titulo                       String?
  fechaOferta                  DateTime              @default(now())
  fechaInicialFactura          DateTime?
  fechaFinalFactura            DateTime?
  diasPeriodoFactura           Int                   @default(30)
  contrataElectricidad         Boolean               @default(true)
  multipuntoElectricidad       Boolean               @default(false)
  tarifaAccesoElectricidad     String
  cupsElectricidad             String?
  consumoAnualElectricidad     Float
  duracionContratoElectricidad Int                   @default(12)
  comercializadoraActual       String
  ahorroMinimo                 Float                 @default(0.1)
  distribuidoraElectrica       String?
  historicoTieneGrafico        Boolean?              @default(false)
  historicoMesesDetectados     Int?
  historicoConsumosMensuales   String?
  historicoPeriodoAnalizado    String?
  historicoConsumoCalculado    Float?
  contrataGas                  Boolean               @default(false)
  multipuntoGas                Boolean               @default(false)
  tarifaAccesoGas              String?
  cupsGas                      String?
  consumoAnualGas              Float?
  duracionContratoGas          Int?
  feeEnergia                   Float                 @default(0.0)
  feeEnergiaMinimo             Float?
  feeEnergiaMaximo             Float?
  feePotencia                  Float                 @default(0.0)
  feePotenciaMinimo            Float?
  feePotenciaMaximo            Float?
  energiaFijo                  Boolean               @default(false)
  potenciaFijo                 Boolean               @default(false)
  potenciaP1                   Float
  potenciaP2                   Float?
  potenciaP3                   Float?
  potenciaP4                   Float?
  potenciaP5                   Float?
  potenciaP6                   Float?
  consumoP1                    Float
  consumoP2                    Float?
  consumoP3                    Float?
  consumoP4                    Float?
  consumoP5                    Float?
  consumoP6                    Float?
  terminoFijoElectricidad      Float
  terminoVariableElectricidad  Float
  excesoPotencia               Float                 @default(0.0)
  compensacionExcedentes       Float                 @default(0.0)
  impuestoElectricidad         Float
  ivaElectricidad              Float
  totalFacturaElectricidad     Float
  terminoFijoGas               Float?
  terminoVariableGas           Float?
  impuestoGas                  Float?
  ivaGas                       Float?
  totalFacturaGas              Float?
  notas                        String?
  createdAt                    DateTime              @default(now())
  updatedAt                    DateTime
  comparativa_ofertas          comparativa_ofertas[]
  clientes                     clientes              @relation(fields: [clienteId], references: [id], onDelete: Cascade)
}

model sessions {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model tarifas {
  id                  String                @id
  comercializadoraId  String
  nombreOferta        String
  energiaVerde        Boolean               @default(false)
  tarifa              String
  zona                String
  tipoOferta          String
  rango               String
  rangoDesde          Float
  rangoHasta          Float?
  tieneFee            Boolean               @default(false)
  energiaP1           Float
  energiaP2           Float?
  energiaP3           Float?
  energiaP4           Float?
  energiaP5           Float?
  energiaP6           Float?
  energiaDescuento    Float?
  potenciaP1          Float?
  potenciaP2          Float?
  potenciaP3          Float?
  potenciaP4          Float?
  potenciaP5          Float?
  potenciaP6          Float?
  potenciaDescuento   Float?
  feeEnergia          Float?
  feeEnergiaMinimo    Float?
  feeEnergiaMaximo    Float?
  feePotencia         Float?
  feePotenciaMinimo   Float?
  feePotenciaMaximo   Float?
  validaHasta         DateTime?
  tipoCliente         String?
  costeGestion        Float                 @default(0)
  costeTotal          Float                 @default(0)
  activa              Boolean               @default(true)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  comparativa_ofertas comparativa_ofertas[]
  comercializadoras   comercializadoras     @relation(fields: [comercializadoraId], references: [id], onDelete: Cascade)
}

model users {
  id            String     @id
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      accounts[]
  sessions      sessions[]
}

model verification_tokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
